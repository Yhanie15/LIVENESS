<!-- dashboard_page.ejs -->
<div class="dashboard-container">
  <!-- Top Row - 3 cards side by side -->
  <div class="dashboard-card" id="total-transactions-card">
    <div class="card-header">Total Transactions</div>
    <div class="card-content">
      <div class="transaction-count">0</div>
    </div>
  </div>
  
  <div class="dashboard-card" id="todays-images-card">
    <div class="card-header">Today's Images</div>
    <div class="card-content">
      <div class="detection-stats-container">
        <!-- Fake Stats -->
        <div class="detection-column fake-column">
          <div class="detection-dot fake-dot"></div>
          <div class="detection-label">Fake Images</div>
          <div class="detection-value fake-value"></div>
          <div class="percentage-badge fake-badge"></div>
        </div>
        
        <!-- Real Stats -->
        <div class="detection-column real-column">
          <div class="detection-dot real-dot"></div>
          <div class="detection-label">Real Images</div>
          <div class="detection-value real-value"></div>
          <div class="percentage-badge real-badge"></div>
        </div>
      </div>
      
      <div class="total-processed">
        <span>total : <strong></strong> images processed</span>
      </div>
    </div>
  </div>
  
  <div class="dashboard-card" id="recent-detections-card">
    <div class="card-header">Recent Fake Detections</div>
    <div class="card-content">
      <div class="detection-list" id="recent-detections-list">
        <!-- Detection items will be populated dynamically -->
      </div>
    </div>
  </div>
  
  <!-- Middle Row -->
  <div class="dashboard-card" id="fake-real-pie-card">
    <div class="card-header">Fake vs Real</div>
    <div class="card-content">
      <div class="pie-chart-container-full">
        <canvas id="fakeRealPieChart"></canvas>
      </div>
      <div class="pie-stats">
        <div class="pie-stat fake-stat">
          <span class="pie-dot fake-dot"></span> Fake : 
        </div>
        <div class="pie-stat real-stat">
          <span class="pie-dot real-dot"></span> Real :
        </div>
      </div>
    </div>
  </div>
  
  <div class="dashboard-card chart-card" id="daily-stats-card">
    <div class="card-header">
      Daily Statistics
      <div class="chart-controls">
        <button class="chart-btn active">Line</button>
        <button class="chart-btn">Bar</button>
      </div>
    </div>
    <div class="card-subtitle">Fake vs Real Fake vs. real images</div>
    <div class="card-content">
      <div class="chart-container">
        <canvas id="dailyStatsChart"></canvas>
      </div>
    </div>
  </div>
  
  <!-- Bottom Row - 2 tables side by side -->
  <div class="dashboard-card" id="top-companies-card">
    <div class="card-header">Top Companies with Fake Detection</div>
    <div class="card-subtitle">Ranked by number of fake image detections (Top 10)</div>
    <div class="card-content">
      <div class="companies-list">
        <!-- Company items will be dynamically populated -->
      </div>
    </div>
  </div>
  
  <div class="dashboard-card" id="employee-detections-card">
    <div class="card-header">Employee Fake Image Detections</div>
    <div class="card-subtitle">Ranked by employee with fake image detection (Top 10)</div>
    <div class="card-content">
      <div class="employees-list">
        <!-- Employee items will be dynamically populated -->
      </div>
    </div>
  </div>
</div>

<!-- Add this before the closing body tag -->
<script>
  class LoadingScreen {
    constructor() {
      this.overlay = null;
      this.progressBar = null;
      this.initialized = false;
    }
  
    init() {
      if (this.initialized) return;
      
      // Create loading overlay element
      this.overlay = document.createElement('div');
      this.overlay.className = 'loading-overlay';
      
      // Create spinner
      const spinner = document.createElement('div');
      spinner.className = 'loading-spinner';
      
      // Create text
      const text = document.createElement('div');
      text.className = 'loading-text';
      text.textContent = 'Loading dashboard data...';
      
      // Create progress container
      const progressContainer = document.createElement('div');
      progressContainer.className = 'loading-progress';
      
      // Create progress bar
      this.progressBar = document.createElement('div');
      this.progressBar.className = 'loading-progress-bar';
      progressContainer.appendChild(this.progressBar);
      
      // Append all elements to overlay
      this.overlay.appendChild(spinner);
      this.overlay.appendChild(text);
      this.overlay.appendChild(progressContainer);
      
      // Append overlay to body
      document.body.appendChild(this.overlay);
      
      this.initialized = true;
    }
    
    show() {
      if (!this.initialized) this.init();
      this.overlay.classList.remove('hidden');
      document.body.style.overflow = 'hidden'; // Prevent scrolling while loading
    }
    
    hide() {
      if (!this.initialized) return;
      this.overlay.classList.add('hidden');
      document.body.style.overflow = ''; // Restore scrolling
      
      // Reset progress bar for next time
      setTimeout(() => {
        if (this.progressBar) this.progressBar.style.width = '0%';
      }, 300);
    }
    
    setProgress(percent) {
      if (!this.initialized || !this.progressBar) return;
      this.progressBar.style.width = `${percent}%`;
    }
  }
  
  // Create a global instance
  window.loadingScreen = new LoadingScreen();
</script>
  
<style>
.loading-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(255, 255, 255, 0.9);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  z-index: 9999;
  transition: opacity 0.3s ease-out, visibility 0.3s ease-out;
}

.loading-overlay.hidden {
  opacity: 0;
  visibility: hidden;
}

.loading-spinner {
  width: 60px;
  height: 60px;
  border: 5px solid #f3f3f3;
  border-top: 5px solid #3498db;
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-bottom: 20px;
}

.loading-text {
  font-size: 18px;
  font-weight: 500;
  color: #333;
  margin-top: 15px;
}

.loading-progress {
  width: 200px;
  height: 4px;
  background-color: #f3f3f3;
  border-radius: 4px;
  margin-top: 15px;
  overflow: hidden;
}

.loading-progress-bar {
  height: 100%;
  width: 0%;
  background-color: #3498db;
  border-radius: 4px;
  transition: width 0.3s ease;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Additional styles for better scrolling in company and employee lists */
.companies-list, .employees-list {
  max-height: 600px;
  overflow-y: auto;
  scrollbar-width: thin;
}

.companies-list::-webkit-scrollbar, .employees-list::-webkit-scrollbar {
  width: 6px;
}

.companies-list::-webkit-scrollbar-thumb, .employees-list::-webkit-scrollbar-thumb {
  background-color: rgba(0, 0, 0, 0.2);
  border-radius: 3px;
}

.companies-list::-webkit-scrollbar-track, .employees-list::-webkit-scrollbar-track {
  background-color: rgba(0, 0, 0, 0.05);
}
</style>
<script src="/js/dashboard.js"></script>